// Code generated by MockGen. DO NOT EDIT.
// Source: articles/usecases.go

// Package mock_articles is a generated GoMock package.
package mock_articles

import (
	context "context"
	reflect "reflect"

	articles "github.com/antunesleo/rest-api-go/articles"
	gomock "github.com/golang/mock/gomock"
)

// MockArticleUseCases is a mock of ArticleUseCases interface.
type MockArticleUseCases struct {
	ctrl     *gomock.Controller
	recorder *MockArticleUseCasesMockRecorder
}

// MockArticleUseCasesMockRecorder is the mock recorder for MockArticleUseCases.
type MockArticleUseCasesMockRecorder struct {
	mock *MockArticleUseCases
}

// NewMockArticleUseCases creates a new mock instance.
func NewMockArticleUseCases(ctrl *gomock.Controller) *MockArticleUseCases {
	mock := &MockArticleUseCases{ctrl: ctrl}
	mock.recorder = &MockArticleUseCasesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArticleUseCases) EXPECT() *MockArticleUseCasesMockRecorder {
	return m.recorder
}

// CreateArticle mocks base method.
func (m *MockArticleUseCases) CreateArticle(ctx context.Context, title, content, desc, categoryName string) (*articles.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateArticle", ctx, title, content, desc, categoryName)
	ret0, _ := ret[0].(*articles.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateArticle indicates an expected call of CreateArticle.
func (mr *MockArticleUseCasesMockRecorder) CreateArticle(ctx, title, content, desc, categoryName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateArticle", reflect.TypeOf((*MockArticleUseCases)(nil).CreateArticle), ctx, title, content, desc, categoryName)
}

// GetArticles mocks base method.
func (m *MockArticleUseCases) GetArticles(ctx context.Context) ([]*articles.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetArticles", ctx)
	ret0, _ := ret[0].([]*articles.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetArticles indicates an expected call of GetArticles.
func (mr *MockArticleUseCasesMockRecorder) GetArticles(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetArticles", reflect.TypeOf((*MockArticleUseCases)(nil).GetArticles), ctx)
}
